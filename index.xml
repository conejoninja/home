<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home Automation project</title>
    <link>https://conejoninja.github.io/home/</link>
    <description>Recent content on Home Automation project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Wed, 09 Mar 2016 20:08:11 +0100</lastBuildDate>
    
	<atom:link href="https://conejoninja.github.io/home/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Roadmap</title>
      <link>https://conejoninja.github.io/home/protocol/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>https://conejoninja.github.io/home/protocol/</guid>
      <description>Quo vadis? The port of the original Material theme has replicated nearly all of its features. A few are still missing but I&amp;rsquo;ve good news: the Hugo community is actively working on this issues. Maybe with the next release of Hugo we can abandon this list. Stay tuned.
Localization Currently, it is possible to collect all strings in a single place for easy customization. However, this only enables you to define all strings in a single language.</description>
    </item>
    
    <item>
      <title>Home Automation project</title>
      <link>https://conejoninja.github.io/home/</link>
      <pubDate>Sun, 11 Jun 2017 18:28:13 +0100</pubDate>
      
      <guid>https://conejoninja.github.io/home/</guid>
      <description>Amateur project to automate a few task in my home and communicate with some IoT devices. I used a mix of languages, frameworks and platforms. I will try to document as much as possible, but remember, this is an amateur project.
Global view In order to interact together, devices communicates with each other through a MQTT server using a custom JSON-based protocol. Besides the devices, there are a few &amp;ldquo;modules&amp;rdquo; too, those modules are programs that consume the MQTT messages, perform actions based of information and allow human interaction (Web, App).</description>
    </item>
    
  </channel>
</rss>